version: "3"
services:
  api:
    build: backend/api
    restart: always
    command: gunicorn project_silos.wsgi:application --bind 0.0.0.0:8080 --workers 5
    ports:
      - "8080:8080"
    environment:
      - SECRET_KEY=${DJANGO_TOKEN}
      - INFLUXDB_TOKEN=${INFLUX_TOKEN}
      - INFLUXDB_ORG=${INFLUX_ORG}
      - INFLUXDB_BUCKET=${INFLUX_BUCKET}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db
      - influxdb
      - emqx
    links:
      - db:db
    volumes:
      - static_volume:/app/static
    networks:
      - internal_network

  influxdb:
    image: "influxdb:latest"
    restart: always
    volumes:
      - influxdb-storage:/var/lib/influxdb2
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PSW}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    networks:
      - internal_network

  emqx:
    image: "emqx:latest"
    restart: always
    ports:
      - "18083:18083"
      - "1883:1883"
    volumes:
      - vol-emqx-data:/opt/emqx/data
      - vol-emqx-etc:/opt/emqx/etc
      - vol-emqx-log:/opt/emqx/log
    networks:
      - internal_network

  nginx:
    image: "pagespeed/nginx-pagespeed:latest"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    volumes:
      - ./nginx_configs:/etc/nginx/conf.d/
      - static_volume:/app/static  # <-- bind the static volume
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - internal_network

  certbot:
    image: "certbot/certbot:latest"
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    image: "postgres:13.4-alpine"
    restart: always
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - internal_network

volumes:
  influxdb-storage:
  vol-emqx-data:
  vol-emqx-etc:
  vol-emqx-log:
  static_volume:
  postgres_data:

networks:
  internal_network:
    driver: bridge